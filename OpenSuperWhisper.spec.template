# -*- mode: python ; coding: utf-8 -*-
# PyInstaller spec file template for OpenSuperWhisper
# This is a template - the actual spec file is generated by build_executable.py

import sys
import os
from PyInstaller.utils.hooks import collect_all

# Collect all necessary modules
datas = []
hiddenimports = []
binaries = []

# Collect OpenSuperWhisper package
opensuperwhisper_datas, opensuperwhisper_binaries, opensuperwhisper_hiddenimports = collect_all('OpenSuperWhisper')
datas.extend(opensuperwhisper_datas)
binaries.extend(opensuperwhisper_binaries)
hiddenimports.extend(opensuperwhisper_hiddenimports)

# Collect PySide6
pyside6_datas, pyside6_binaries, pyside6_hiddenimports = collect_all('PySide6')
datas.extend(pyside6_datas)
binaries.extend(pyside6_binaries)
hiddenimports.extend(pyside6_hiddenimports)

# Platform-specific configurations
if sys.platform.startswith('linux'):
    # Linux-specific hidden imports
    hiddenimports.extend([
        'PySide6.QtDBus',
    ])
elif sys.platform == 'darwin':
    # macOS-specific configurations
    pass
elif sys.platform == 'win32':
    # Windows-specific configurations
    try:
        import win32api
        hiddenimports.extend([
            'win32api',
            'win32con', 
            'win32gui',
        ])
    except ImportError:
        pass

# Add specific hidden imports
hiddenimports.extend([
    'OpenSuperWhisper.first_run',
    'OpenSuperWhisper.security',
    'OpenSuperWhisper.recording_indicator',
    'cryptography.fernet',
    'yaml',
    'tempfile',
])

block_cipher = None

a = Analysis(
    ['run_app.py'],
    pathex=['.'],
    binaries=binaries,
    datas=datas,
    hiddenimports=hiddenimports,
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[
        'tkinter',
        'matplotlib',
        'test',
        'unittest',
        'IPython',
        'jupyter',
        'notebook',
        'scipy',
        'pandas',
        'sklearn',
    ],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=block_cipher,
    noarchive=False,
)

pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

exe = EXE(
    pyz,
    a.scripts,
    a.binaries,
    a.zipfiles,
    a.datas,
    [],
    name='OpenSuperWhisper',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=False,  # Disable UPX for CI compatibility
    upx_exclude=[],
    runtime_tmpdir=None,
    console=False,
    disable_windowed_traceback=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
)