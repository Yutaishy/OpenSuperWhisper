name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.12', '3.13']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y portaudio19-dev

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Lint with ruff
      run: ruff check OpenSuperWhisper/ tests/

    - name: Format check with black
      run: black --check OpenSuperWhisper/ tests/

    - name: Type check with mypy
      run: mypy OpenSuperWhisper/ --ignore-missing-imports

    - name: Test with pytest
      run: pytest tests/ -v --cov=OpenSuperWhisper

  build:
    needs: test
    runs-on: windows-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable
      run: |
        pyinstaller --onefile --windowed run_app.py --name OpenSuperWhisper

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: OpenSuperWhisper-Windows
        path: dist/OpenSuperWhisper.exe