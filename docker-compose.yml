version: '3.8'

services:
  opensuperwhisper:
    image: opensuperwhisper:latest
    build:
      context: .
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
        - linux/arm64
      cache_from:
        - type=registry,ref=ghcr.io/${GITHUB_REPOSITORY:-opensuperwhisper/opensuperwhisper}:buildcache
      cache_to:
        - type=registry,ref=ghcr.io/${GITHUB_REPOSITORY:-opensuperwhisper/opensuperwhisper}:buildcache,mode=max
    container_name: opensuperwhisper
    restart: unless-stopped
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    # Port mapping
    ports:
      - "${PORT:-8000}:8000"
    
    # Environment variables
    environment:
      - HOST=${HOST:-0.0.0.0}
      - PORT=${PORT:-8000}
      - WORKERS=${WORKERS:-4}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-100M}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-*}
      - API_KEY=${API_KEY:-}
      - WHISPER_MODEL=${WHISPER_MODEL:-base}
      - LANGUAGE=${LANGUAGE:-en}
      - TZ=${TZ:-UTC}
    
    # Volumes for persistence
    volumes:
      - ./logs:/app/logs
      - ./configs:/app/configs:ro
      - ./style_guides:/app/style_guides:ro
      - cache_data:/app/cache
      - model_data:/app/models
    
    # Network configuration
    networks:
      - opensuperwhisper_net
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=opensuperwhisper"
    
    # Security options
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /app/tmp
    
    # Labels for container management
    labels:
      - "com.opensuperwhisper.description=Voice transcription service"
      - "com.opensuperwhisper.version=${VERSION:-latest}"
      - "traefik.enable=true"
      - "traefik.http.routers.opensuperwhisper.rule=Host(`${DOMAIN:-localhost}`)"
      - "traefik.http.services.opensuperwhisper.loadbalancer.server.port=8000"

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: opensuperwhisper_nginx
    restart: unless-stopped
    profiles:
      - with-nginx
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs/ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
    depends_on:
      opensuperwhisper:
        condition: service_healthy
    networks:
      - opensuperwhisper_net
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  # Optional: Redis for caching/sessions
  redis:
    image: redis:7-alpine
    container_name: opensuperwhisper_redis
    restart: unless-stopped
    profiles:
      - with-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-changeme}
    volumes:
      - redis_data:/data
    networks:
      - opensuperwhisper_net
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

# Networks
networks:
  opensuperwhisper_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

# Volumes
volumes:
  cache_data:
    driver: local
  model_data:
    driver: local
  redis_data:
    driver: local
  nginx_cache:
    driver: local