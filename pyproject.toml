[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "opensuperwhisper"
version = "0.6.1"
description = "Two-Stage Voice Transcription Pipeline with AI-Powered Text Formatting"
readme = "README.md"
authors = [{name = "Yutaishy"}]
license = "MIT"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Office/Business",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.12"
dependencies = [
    "PySide6>=6.6.0",
    "openai>=1.50.0",
    "sounddevice>=0.4.6",
    "numpy>=1.24.0",
    "pynput>=1.7.6",
    "PyYAML>=6.0",
    "cryptography>=41.0.0",
    "Pillow>=9.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "types-PyYAML>=6.0",
    "pyinstaller>=6.0",
]

[project.urls]
Homepage = "https://github.com/Yutaishy/OpenSuperWhisper"
Repository = "https://github.com/Yutaishy/OpenSuperWhisper.git"
Issues = "https://github.com/Yutaishy/OpenSuperWhisper/issues"

[project.scripts]
opensuperwhisper = "run_app:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["OpenSuperWhisper*"]
exclude = ["tests*", "style_guides*", "build*", "dist*"]

[tool.setuptools.package-data]
OpenSuperWhisper = ["*.json", "*.yaml", "*.yml"]

[tool.setuptools]
include-package-data = true

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"